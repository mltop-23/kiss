{"ast":null,"code":"var _jsxFileName = \"/Users/volodua/Documents/marketplace/marketplace/src/pages/recipes-page/RecipesPage.js\",\n  _s = $RefreshSig$();\n/*\nПример результата запроса к API:\n{\n  \"recipes\": [\n    {\n      \"id\": 1,\n      \"src\": \"/borscht.jpg\",\n      \"title\": \"Борщ\",\n      \"description\": \"Традиционный украинский суп с буряком\"\n    }\n  ]\n}\n\nПример кода с комментариями:\n*/\n\n// Импортируем необходимые библиотеки и стили\nimport React, { useState, useEffect } from 'react'; // Импортируем React и хуки useState и useEffect\nimport { Link } from 'react-router-dom'; // Импортируем компонент Link из react-router-dom для создания ссылок\nimport axios from 'axios'; // Импортируем axios для выполнения HTTP-запросов\nimport './RecipesPage.css'; // Импортируем стили для компонента\n\n// Основной функциональный компонент страницы рецептов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipesPage = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]); // Состояние для хранения списка рецептов\n\n  // useEffect с пустым массивом зависимостей означает, что этот эффект выполнится один раз после монтирования компонента\n  useEffect(() => {\n    // Выполняем GET-запрос для получения списка рецептов\n    axios.get('http://localhost:3001/api/recipes').then(response => {\n      // Устанавливаем полученные рецепты в состояние\n      setRecipes(response.data.recipes); // Пример ответа от API: [{\"id\":1,\"src\":\"/borscht.jpg\",\"title\":\"Борщ\",\"description\":\"Традиционный украинский суп с буряком\"}]\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Основная обертка страницы рецептов\n    _jsxDEV(\"div\", {\n      className: \"recipes-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes-grid\",\n        children: recipes.map(recipe =>\n        /*#__PURE__*/\n        // Компонент Link для создания ссылки на страницу рецепта\n        _jsxDEV(Link, {\n          to: `/recipe/${recipe.id}`,\n          className: \"recipe-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.src,\n            alt: recipe.title,\n            className: \"recipe-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), \" // \\u041F\\u0440\\u0438\\u043C\\u0435\\u0440: \\\"\\u0411\\u043E\\u0440\\u0449\\\"\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: recipe.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \" // \\u041F\\u0440\\u0438\\u043C\\u0435\\u0440: \\\"\\u0422\\u0440\\u0430\\u0434\\u0438\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0439 \\u0443\\u043A\\u0440\\u0430\\u0438\\u043D\\u0441\\u043A\\u0438\\u0439 \\u0441\\u0443\\u043F \\u0441 \\u0431\\u0443\\u0440\\u044F\\u043A\\u043E\\u043C\\\"\"]\n        }, recipe.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Экспортируем компонент для использования в других частях приложения\n_s(RecipesPage, \"xBkrk5r3hhKgEpMO+HGI7yKr/O8=\");\n_c = RecipesPage;\nexport default RecipesPage;\nvar _c;\n$RefreshReg$(_c, \"RecipesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","RecipesPage","_s","recipes","setRecipes","get","then","response","data","className","children","map","recipe","to","id","src","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/Users/volodua/Documents/marketplace/marketplace/src/pages/recipes-page/RecipesPage.js"],"sourcesContent":["/*\nПример результата запроса к API:\n{\n  \"recipes\": [\n    {\n      \"id\": 1,\n      \"src\": \"/borscht.jpg\",\n      \"title\": \"Борщ\",\n      \"description\": \"Традиционный украинский суп с буряком\"\n    }\n  ]\n}\n\nПример кода с комментариями:\n*/\n\n// Импортируем необходимые библиотеки и стили\nimport React, { useState, useEffect } from 'react'; // Импортируем React и хуки useState и useEffect\nimport { Link } from 'react-router-dom'; // Импортируем компонент Link из react-router-dom для создания ссылок\nimport axios from 'axios'; // Импортируем axios для выполнения HTTP-запросов\nimport './RecipesPage.css'; // Импортируем стили для компонента\n\n// Основной функциональный компонент страницы рецептов\nconst RecipesPage = () => {\n  const [recipes, setRecipes] = useState([]); // Состояние для хранения списка рецептов\n\n  // useEffect с пустым массивом зависимостей означает, что этот эффект выполнится один раз после монтирования компонента\n  useEffect(() => {\n    // Выполняем GET-запрос для получения списка рецептов\n    axios.get('http://localhost:3001/api/recipes')\n      .then(response => {\n        // Устанавливаем полученные рецепты в состояние\n        setRecipes(response.data.recipes); // Пример ответа от API: [{\"id\":1,\"src\":\"/borscht.jpg\",\"title\":\"Борщ\",\"description\":\"Традиционный украинский суп с буряком\"}]\n      })\n  }, []);\n\n  return (\n    // Основная обертка страницы рецептов\n    <div className=\"recipes-page\">\n      {/* Сетка для отображения рецептов */}\n      <div className=\"recipes-grid\">\n        {/* Мапируем список рецептов для создания карточек */}\n        {recipes.map((recipe) => (\n          // Компонент Link для создания ссылки на страницу рецепта\n          <Link to={`/recipe/${recipe.id}`} key={recipe.id} className=\"recipe-card\">\n            {/* Изображение рецепта */}\n            <img src={recipe.src} alt={recipe.title} className=\"recipe-image\" /> {/* Пример: src=\"/borscht.jpg\", alt=\"Борщ\" */}\n            {/* Заголовок рецепта */}\n            <h2>{recipe.title}</h2> // Пример: \"Борщ\"\n            {/* Описание рецепта */}\n            <p>{recipe.description}</p> // Пример: \"Традиционный украинский суп с буряком\"\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Экспортируем компонент для использования в других частях приложения\nexport default RecipesPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,mBAAmB,CAAC,CAAC;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACO,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACAH,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,eAE3BV,OAAA;QAAKS,SAAS,EAAC,cAAc;QAAAC,QAAA,EAE1BP,OAAO,CAACQ,GAAG,CAAEC,MAAM;QAAA;QAClB;QACAZ,OAAA,CAACH,IAAI;UAACgB,EAAE,EAAE,WAAWD,MAAM,CAACE,EAAE,EAAG;UAAiBL,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAEvEV,OAAA;YAAKe,GAAG,EAAEH,MAAM,CAACG,GAAI;YAACC,GAAG,EAAEJ,MAAM,CAACK,KAAM;YAACR,SAAS,EAAC;UAAc;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,eAErErB,OAAA;YAAAU,QAAA,EAAKE,MAAM,CAACK;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,0EACvB,eACArB,OAAA;YAAAU,QAAA,EAAIE,MAAM,CAACU;UAAW;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,4PAC7B;QAAA,GAPuCT,MAAM,CAACE,EAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAO1C,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV,CAAC;;AAED;AAAAnB,EAAA,CAnCMD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}