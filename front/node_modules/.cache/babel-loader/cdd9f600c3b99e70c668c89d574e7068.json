{"ast":null,"code":"var _jsxFileName = \"/home/makmus23/go/src/grpc/sso/front/src/components/home-page/calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  onDateChange\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    onDateChange(date);\n  };\n\n  // Примерный вывод календаря\n  const renderCalendar = () => {\n    const daysInMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate();\n    const firstDayOfMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay();\n    const calendarDays = [];\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      calendarDays.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day empty\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this));\n    }\n    for (let i = 1; i <= daysInMonth; i++) {\n      calendarDays.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${selectedDate.getDate() === i ? 'selected' : ''}`,\n        onClick: () => handleDateClick(new Date(selectedDate.getFullYear(), selectedDate.getMonth(), i)),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this));\n    }\n    return calendarDays;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDateClick(new Date(selectedDate.getFullYear(), selectedDate.getMonth() - 1, 1)),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedDate.toLocaleDateString('ru-RU', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDateClick(new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 1)),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-body\",\n      children: renderCalendar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","onDateChange","_s","selectedDate","setSelectedDate","Date","handleDateClick","date","renderCalendar","daysInMonth","getFullYear","getMonth","getDate","firstDayOfMonth","getDay","calendarDays","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","children","toLocaleDateString","month","year","_c","$RefreshReg$"],"sources":["/home/makmus23/go/src/grpc/sso/front/src/components/home-page/calendar/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Calendar.css';\n\nconst Calendar = ({ onDateChange }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateClick = (date) => {\n    setSelectedDate(date);\n    onDateChange(date);\n  };\n\n  // Примерный вывод календаря\n  const renderCalendar = () => {\n    const daysInMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0).getDate();\n    const firstDayOfMonth = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1).getDay();\n    const calendarDays = [];\n\n    for (let i = 0; i < firstDayOfMonth; i++) {\n      calendarDays.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\n    }\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      calendarDays.push(\n        <div\n          key={i}\n          className={`calendar-day ${selectedDate.getDate() === i ? 'selected' : ''}`}\n          onClick={() => handleDateClick(new Date(selectedDate.getFullYear(), selectedDate.getMonth(), i))}\n        >\n          {i}\n        </div>\n      );\n    }\n\n    return calendarDays;\n  };\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar-header\">\n        <button onClick={() => handleDateClick(new Date(selectedDate.getFullYear(), selectedDate.getMonth() - 1, 1))}>\n          &lt;\n        </button>\n        <h2>{selectedDate.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' })}</h2>\n        <button onClick={() => handleDateClick(new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 1))}>\n          &gt;\n        </button>\n      </div>\n      <div className=\"calendar-body\">\n        {renderCalendar()}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}